{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useFonts, Montserrat_400Regular, Montserrat_700Bold } from '@expo-google-fonts/montserrat';\nimport Cesta from \"../telas/Carros\";\nimport mock from \"../../src/mocks/carros\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nexport default function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    \"MontserratRegular\": Montserrat_400Regular,\n    \"MontserratBold\": Montserrat_700Bold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fonteCarregada = _useFonts2[0];\n\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n\n    function _prepare() {\n      _prepare = _asyncToGenerator(function* () {\n        try {\n          yield SplashScreen.preventAutoHideAsync();\n        } catch (e) {\n          console.warn(e);\n        }\n      });\n      return _prepare.apply(this, arguments);\n    }\n\n    prepare();\n  }, []);\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fonteCarregada) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fonteCarregada]);\n\n  if (!fonteCarregada) {\n    return null;\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    onLayout: onLayoutRootView,\n    children: [_jsx(StatusBar, {}), _jsx(Cesta, _objectSpread(_objectSpread({}, mock), {}, {\n      navigation: navigation\n    }))]\n  });\n}","map":{"version":3,"names":["React","useCallback","useEffect","useFonts","Montserrat_400Regular","Montserrat_700Bold","Cesta","mock","SplashScreen","preventAutoHideAsync","App","navigation","fonteCarregada","prepare","e","console","warn","onLayoutRootView","hideAsync","flex"],"sources":["C:/Users/isaia/OneDrive/Documentos/ISAIAS/Alura/React/cesta/AppCesta/src/telas/AppRotas.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { StatusBar, SafeAreaView } from 'react-native';\r\nimport { useFonts, Montserrat_400Regular, Montserrat_700Bold }\r\n    from '@expo-google-fonts/montserrat';\r\n\r\nimport Cesta from '../telas/Carros';\r\nimport mock from '../../src/mocks/carros';\r\n\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\n// Keep the splash screen visible while we fetch resources\r\nSplashScreen.preventAutoHideAsync();\r\n\r\nexport default function App({ navigation }) {\r\n    const [fonteCarregada] = useFonts({\r\n        \"MontserratRegular\": Montserrat_400Regular,\r\n        \"MontserratBold\": Montserrat_700Bold,\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function prepare() {\r\n            try {\r\n                // Pre-load fonts, make any API calls you need to do here\r\n                await SplashScreen.preventAutoHideAsync();\r\n                // Artificially delay for two seconds to simulate a slow loading\r\n                // experience. Please remove this if you copy and paste the code!\r\n            } catch (e) {\r\n                console.warn(e);\r\n            }\r\n        }\r\n\r\n        prepare();\r\n    }, []);\r\n\r\n    const onLayoutRootView = useCallback(async () => {\r\n        if (fonteCarregada) {\r\n            await SplashScreen.hideAsync();\r\n        }\r\n    }, [fonteCarregada]);\r\n\r\n    if (!fonteCarregada) {\r\n        return null;\r\n    }\r\n\r\n    /*\r\n      if (!fonteCarregada) {\r\n        <SplashScreen />\r\n      }\r\n    */\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }} onLayout={onLayoutRootView}>\r\n            <StatusBar />\r\n            <Cesta {...mock} navigation={navigation} />\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;;;AAEA,SAASC,QAAT,EAAmBC,qBAAnB,EAA0CC,kBAA1C,QACS,+BADT;AAGA,OAAOC,KAAP;AACA,OAAOC,IAAP;AAEA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;;;AAGAA,YAAY,CAACC,oBAAb;AAEA,eAAe,SAASC,GAAT,OAA6B;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACxC,gBAAyBR,QAAQ,CAAC;IAC9B,qBAAqBC,qBADS;IAE9B,kBAAkBC;EAFY,CAAD,CAAjC;EAAA;EAAA,IAAOO,cAAP;;EAKAV,SAAS,CAAC,YAAM;IAAA,SACGW,OADH;MAAA;IAAA;;IAAA;MAAA,6BACZ,aAAyB;QACrB,IAAI;UAEA,MAAML,YAAY,CAACC,oBAAb,EAAN;QAGH,CALD,CAKE,OAAOK,CAAP,EAAU;UACRC,OAAO,CAACC,IAAR,CAAaF,CAAb;QACH;MACJ,CAVW;MAAA;IAAA;;IAYZD,OAAO;EACV,CAbQ,EAaN,EAbM,CAAT;EAeA,IAAMI,gBAAgB,GAAGhB,WAAW,mBAAC,aAAY;IAC7C,IAAIW,cAAJ,EAAoB;MAChB,MAAMJ,YAAY,CAACU,SAAb,EAAN;IACH;EACJ,CAJmC,GAIjC,CAACN,cAAD,CAJiC,CAApC;;EAMA,IAAI,CAACA,cAAL,EAAqB;IACjB,OAAO,IAAP;EACH;;EAQD,OACI,MAAC,YAAD;IAAc,KAAK,EAAE;MAAEO,IAAI,EAAE;IAAR,CAArB;IAAkC,QAAQ,EAAEF,gBAA5C;IAAA,WACI,KAAC,SAAD,KADJ,EAEI,KAAC,KAAD,kCAAWV,IAAX;MAAiB,UAAU,EAAEI;IAA7B,GAFJ;EAAA,EADJ;AAMH"},"metadata":{},"sourceType":"module"}